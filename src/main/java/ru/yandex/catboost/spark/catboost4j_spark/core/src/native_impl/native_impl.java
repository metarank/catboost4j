/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.yandex.catboost.spark.catboost4j_spark.core.src.native_impl;

public class native_impl {
  public static byte[] toPrimitiveArrayImpl_i8(TVector_i8 v) {
    return native_implJNI.toPrimitiveArrayImpl_i8(TVector_i8.getCPtr(v), v);
  }

  public static java.lang.Object asDirectByteBufferImpl_i8(TVector_i8 v) {
    return native_implJNI.asDirectByteBufferImpl_i8(TVector_i8.getCPtr(v), v);
  }

  public static short[] toPrimitiveArrayImpl_i16(TVector_i16 v) {
    return native_implJNI.toPrimitiveArrayImpl_i16(TVector_i16.getCPtr(v), v);
  }

  public static java.lang.Object asDirectByteBufferImpl_i16(TVector_i16 v) {
    return native_implJNI.asDirectByteBufferImpl_i16(TVector_i16.getCPtr(v), v);
  }

  public static int[] toPrimitiveArrayImpl_i32(TVector_i32 v) {
    return native_implJNI.toPrimitiveArrayImpl_i32(TVector_i32.getCPtr(v), v);
  }

  public static java.lang.Object asDirectByteBufferImpl_i32(TVector_i32 v) {
    return native_implJNI.asDirectByteBufferImpl_i32(TVector_i32.getCPtr(v), v);
  }

  public static long[] toPrimitiveArrayImpl_i64(TVector_i64 v) {
    return native_implJNI.toPrimitiveArrayImpl_i64(TVector_i64.getCPtr(v), v);
  }

  public static java.lang.Object asDirectByteBufferImpl_i64(TVector_i64 v) {
    return native_implJNI.asDirectByteBufferImpl_i64(TVector_i64.getCPtr(v), v);
  }

  public static float[] toPrimitiveArrayImpl_float(TVector_float v) {
    return native_implJNI.toPrimitiveArrayImpl_float(TVector_float.getCPtr(v), v);
  }

  public static java.lang.Object asDirectByteBufferImpl_float(TVector_float v) {
    return native_implJNI.asDirectByteBufferImpl_float(TVector_float.getCPtr(v), v);
  }

  public static double[] toPrimitiveArrayImpl_double(TVector_double v) {
    return native_implJNI.toPrimitiveArrayImpl_double(TVector_double.getCPtr(v), v);
  }

  public static java.lang.Object asDirectByteBufferImpl_double(TVector_double v) {
    return native_implJNI.asDirectByteBufferImpl_double(TVector_double.getCPtr(v), v);
  }

  public static TMaybe_TString MakeMaybeUtf8String(byte[] data, int length) {
    return new TMaybe_TString(native_implJNI.MakeMaybeUtf8String(data, length), true);
  }

  public static long CalcGroupIdForString(String token) {
    return native_implJNI.CalcGroupIdForString(token);
  }

  public static TFeatureMetaInfo MakeFeatureMetaInfo(EFeatureType type, String name, boolean isSparse, boolean isIgnored, boolean isAvailable) throws Exception {
    return new TFeatureMetaInfo(native_implJNI.MakeFeatureMetaInfo__SWIG_0(type.swigValue(), name, isSparse, isIgnored, isAvailable), true);
  }

  public static TFeatureMetaInfo MakeFeatureMetaInfo(EFeatureType type, String name, boolean isSparse, boolean isIgnored) throws Exception {
    return new TFeatureMetaInfo(native_implJNI.MakeFeatureMetaInfo__SWIG_1(type.swigValue(), name, isSparse, isIgnored), true);
  }

  public static TFeatureMetaInfo MakeFeatureMetaInfo(EFeatureType type, String name, boolean isSparse) throws Exception {
    return new TFeatureMetaInfo(native_implJNI.MakeFeatureMetaInfo__SWIG_2(type.swigValue(), name, isSparse), true);
  }

  public static TFeatureMetaInfo MakeFeatureMetaInfo(EFeatureType type, String name) throws Exception {
    return new TFeatureMetaInfo(native_implJNI.MakeFeatureMetaInfo__SWIG_3(type.swigValue(), name), true);
  }

  public static TFeaturesLayout MakeFeaturesLayout(TVector_TFeatureMetaInfo data) throws Exception {
    return new TFeaturesLayout(native_implJNI.MakeFeaturesLayout__SWIG_0(TVector_TFeatureMetaInfo.getCPtr(data), data), true);
  }

  public static TFeaturesLayout MakeFeaturesLayout(int featureCount, TVector_TString featureNames, TVector_i32 ignoredFeatures) throws Exception {
    return new TFeaturesLayout(native_implJNI.MakeFeaturesLayout__SWIG_1(featureCount, TVector_TString.getCPtr(featureNames), featureNames, TVector_i32.getCPtr(ignoredFeatures), ignoredFeatures), true);
  }

  public static TFeaturesLayoutPtr CloneWithSelectedFeatures(TFeaturesLayout featuresLayout, int[] selectedFeatures) throws Exception {
    return new TFeaturesLayoutPtr(native_implJNI.CloneWithSelectedFeatures(TFeaturesLayout.getCPtr(featuresLayout), featuresLayout, selectedFeatures), true);
  }

  public static TVector_i32 GetAvailableFeatures_Float(TFeaturesLayout featuresLayout) {
    return new TVector_i32(native_implJNI.GetAvailableFeatures_Float(TFeaturesLayout.getCPtr(featuresLayout), featuresLayout), true);
  }

  public static TVector_i32 GetAvailableFeatures_Categorical(TFeaturesLayout featuresLayout) {
    return new TVector_i32(native_implJNI.GetAvailableFeatures_Categorical(TFeaturesLayout.getCPtr(featuresLayout), featuresLayout), true);
  }

  public static TVector_i32 GetAvailableFeaturesFlatIndices_Float(TFeaturesLayout featuresLayout) {
    return new TVector_i32(native_implJNI.GetAvailableFeaturesFlatIndices_Float(TFeaturesLayout.getCPtr(featuresLayout), featuresLayout), true);
  }

  public static TVector_i32 GetAvailableFeaturesFlatIndices_Categorical(TFeaturesLayout featuresLayout) {
    return new TVector_i32(native_implJNI.GetAvailableFeaturesFlatIndices_Categorical(TFeaturesLayout.getCPtr(featuresLayout), featuresLayout), true);
  }

  public static TIntermediateDataMetaInfo GetIntermediateDataMetaInfo(String schema, String columnDescriptionPathWithScheme, String plainJsonParamsAsString, TMaybe_TString dsvHeader, String firstDataLine) throws Exception {
    return new TIntermediateDataMetaInfo(native_implJNI.GetIntermediateDataMetaInfo(schema, columnDescriptionPathWithScheme, plainJsonParamsAsString, TMaybe_TString.getCPtr(dsvHeader), dsvHeader, firstDataLine), true);
  }

  public static QuantizedFeaturesInfoPtr MakeQuantizedFeaturesInfo(TFeaturesLayout featuresLayout) throws Exception {
    return new QuantizedFeaturesInfoPtr(native_implJNI.MakeQuantizedFeaturesInfo(TFeaturesLayout.getCPtr(featuresLayout), featuresLayout), true);
  }

  public static QuantizedFeaturesInfoPtr MakeEstimatedQuantizedFeaturesInfo(int featureCount) throws Exception {
    return new QuantizedFeaturesInfoPtr(native_implJNI.MakeEstimatedQuantizedFeaturesInfo(featureCount), true);
  }

  public static void UpdateCatFeaturesInfo(int[] catFeaturesUniqValueCounts, boolean isInitialization, TQuantizedFeaturesInfo quantizedFeaturesInfo) throws Exception {
    native_implJNI.UpdateCatFeaturesInfo(catFeaturesUniqValueCounts, isInitialization, TQuantizedFeaturesInfo.getCPtr(quantizedFeaturesInfo), quantizedFeaturesInfo);
  }

  public static int CalcMaxCategoricalFeaturesUniqueValuesCountOnLearn(TQuantizedFeaturesInfo quantizedFeaturesInfo) throws Exception {
    return native_implJNI.CalcMaxCategoricalFeaturesUniqueValuesCountOnLearn(TQuantizedFeaturesInfo.getCPtr(quantizedFeaturesInfo), quantizedFeaturesInfo);
  }

  public static TVector_i32 GetCategoricalFeaturesUniqueValuesCounts(TQuantizedFeaturesInfo quantizedFeaturesInfo) throws Exception {
    return new TVector_i32(native_implJNI.GetCategoricalFeaturesUniqueValuesCounts(TQuantizedFeaturesInfo.getCPtr(quantizedFeaturesInfo), quantizedFeaturesInfo), true);
  }

  public static void DbgDump(TQuantizedFeaturesInfo quantizedFeaturesInfo, String fileName) {
    native_implJNI.DbgDump(TQuantizedFeaturesInfo.getCPtr(quantizedFeaturesInfo), quantizedFeaturesInfo, fileName);
  }

  public static TRawObjectsDataProviderPtr CreateRawObjectsDataProvider(TFeaturesLayoutPtr featuresLayout, long objectCount, TVector_TMaybeOwningConstArrayHolder_float columnwiseFloatFeaturesData, TVector_TMaybeOwningConstArrayHolder_i32 columnwiseCatFeaturesData, int maxUniqCatFeatureValues, TLocalExecutor localExecutor) throws Exception {
    return new TRawObjectsDataProviderPtr(native_implJNI.CreateRawObjectsDataProvider(TFeaturesLayoutPtr.getCPtr(featuresLayout), featuresLayout, objectCount, TVector_TMaybeOwningConstArrayHolder_float.getCPtr(columnwiseFloatFeaturesData), columnwiseFloatFeaturesData, TVector_TMaybeOwningConstArrayHolder_i32.getCPtr(columnwiseCatFeaturesData), columnwiseCatFeaturesData, maxUniqCatFeatureValues, TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public static void SavePairsInGroupedDsvFormat(TDataProviderPtr dataProvider, String outputFile) throws Exception {
    native_implJNI.SavePairsInGroupedDsvFormat(TDataProviderPtr.getCPtr(dataProvider), dataProvider, outputFile);
  }

  public static QuantizedFeaturesInfoPtr PrepareQuantizationParameters(TFeaturesLayout featuresLayout, String plainJsonParamsAsString) throws Exception {
    return new QuantizedFeaturesInfoPtr(native_implJNI.PrepareQuantizationParameters(TFeaturesLayout.getCPtr(featuresLayout), featuresLayout, plainJsonParamsAsString), true);
  }

  public static TQuantizedObjectsDataProviderPtr Quantize(QuantizedFeaturesInfoPtr quantizedFeaturesInfo, TRawObjectsDataProviderPtr rawObjectsDataProvider, TLocalExecutor localExecutor) throws Exception {
    return new TQuantizedObjectsDataProviderPtr(native_implJNI.Quantize(QuantizedFeaturesInfoPtr.getCPtr(quantizedFeaturesInfo), quantizedFeaturesInfo, TRawObjectsDataProviderPtr.getCPtr(rawObjectsDataProvider), rawObjectsDataProvider, TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public static void GetActiveFeaturesIndices(TFeaturesLayoutPtr featuresLayout, QuantizedFeaturesInfoPtr quantizedFeaturesInfo, TVector_i32 ui8FlatIndices, TVector_i32 ui16FlatIndices, TVector_i32 ui32FlatIndices) throws Exception {
    native_implJNI.GetActiveFeaturesIndices(TFeaturesLayoutPtr.getCPtr(featuresLayout), featuresLayout, QuantizedFeaturesInfoPtr.getCPtr(quantizedFeaturesInfo), quantizedFeaturesInfo, TVector_i32.getCPtr(ui8FlatIndices), ui8FlatIndices, TVector_i32.getCPtr(ui16FlatIndices), ui16FlatIndices, TVector_i32.getCPtr(ui32FlatIndices), ui32FlatIndices);
  }

  public static SWIGTYPE_p_TCtrHelper GetCtrHelper(TCatBoostOptions catBoostOptions, TFeaturesLayout layout, TVector_float preprocessedLearnTarget, TVector_i8 serializedLabelConverter) throws Exception {
    return new SWIGTYPE_p_TCtrHelper(native_implJNI.GetCtrHelper(TCatBoostOptions.getCPtr(catBoostOptions), catBoostOptions, TFeaturesLayout.getCPtr(layout), layout, TVector_float.getCPtr(preprocessedLearnTarget), preprocessedLearnTarget, TVector_i8.getCPtr(serializedLabelConverter), serializedLabelConverter), true);
  }

  public static TTargetStatsForCtrs ComputeTargetStatsForCtrs(SWIGTYPE_p_TCtrHelper ctrHelper, TVector_float preprocessedLearnTarget, TLocalExecutor localExecutor) throws Exception {
    return new TTargetStatsForCtrs(native_implJNI.ComputeTargetStatsForCtrs(SWIGTYPE_p_TCtrHelper.getCPtr(ctrHelper), TVector_float.getCPtr(preprocessedLearnTarget), preprocessedLearnTarget, TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public static void ComputeEstimatedCtrFeatures(SWIGTYPE_p_TCtrHelper ctrHelper, TCatBoostOptions catBoostOptions, TTargetStatsForCtrs targetStats, TQuantizedObjectsDataProviderPtr learnData, TVector_TQuantizedObjectsDataProviderPtr testData, TLocalExecutor localExecutor, TEstimatedForCPUObjectsDataProviders outputData, TPrecomputedOnlineCtrMetaData outputMeta) throws Exception {
    native_implJNI.ComputeEstimatedCtrFeatures(SWIGTYPE_p_TCtrHelper.getCPtr(ctrHelper), TCatBoostOptions.getCPtr(catBoostOptions), catBoostOptions, TTargetStatsForCtrs.getCPtr(targetStats), targetStats, TQuantizedObjectsDataProviderPtr.getCPtr(learnData), learnData, TVector_TQuantizedObjectsDataProviderPtr.getCPtr(testData), testData, TLocalExecutor.getCPtr(localExecutor), localExecutor, TEstimatedForCPUObjectsDataProviders.getCPtr(outputData), outputData, TPrecomputedOnlineCtrMetaData.getCPtr(outputMeta), outputMeta);
  }

  public static void SaveQuantizedPool(TDataProviderPtr dataProvider, String fileName) throws Exception {
    native_implJNI.SaveQuantizedPool(TDataProviderPtr.getCPtr(dataProvider), dataProvider, fileName);
  }

  public static SWIGTYPE_p_NJson__TJsonValue ParseCatBoostPlainParamsToJson(String plainJsonParamsAsString) throws Exception {
    return new SWIGTYPE_p_NJson__TJsonValue(native_implJNI.ParseCatBoostPlainParamsToJson(plainJsonParamsAsString), true);
  }

  public static TCatBoostOptions LoadCatBoostOptions(SWIGTYPE_p_NJson__TJsonValue plainJsonParams) throws Exception {
    return new TCatBoostOptions(native_implJNI.LoadCatBoostOptions(SWIGTYPE_p_NJson__TJsonValue.getCPtr(plainJsonParams)), true);
  }

  public static void InitCatBoostOptions(String plainJsonParamsAsString, TCatBoostOptions result) throws Exception {
    native_implJNI.InitCatBoostOptions(plainJsonParamsAsString, TCatBoostOptions.getCPtr(result), result);
  }

  public static int GetOneHotMaxSize(int maxCategoricalFeaturesUniqValuesOnLearn, boolean hasLearnTarget, String plainJsonParamsAsString) throws Exception {
    return native_implJNI.GetOneHotMaxSize(maxCategoricalFeaturesUniqValuesOnLearn, hasLearnTarget, plainJsonParamsAsString);
  }

  public static TFullModel ReadModel(String modelFile, EModelType format) throws Exception {
    return new TFullModel(native_implJNI.ReadModel__SWIG_0(modelFile, format.swigValue()), true);
  }

  public static TFullModel ReadModel(String modelFile) throws Exception {
    return new TFullModel(native_implJNI.ReadModel__SWIG_1(modelFile), true);
  }

  public static TFullModel SumModels(TVector_const_TFullModel_ptr modelVector, TVector_double weights, TVector_TString modelParamsPrefixes, ECtrTableMergePolicy ctrMergePolicy) throws Exception {
    return new TFullModel(native_implJNI.SumModels__SWIG_0(TVector_const_TFullModel_ptr.getCPtr(modelVector), modelVector, TVector_double.getCPtr(weights), weights, TVector_TString.getCPtr(modelParamsPrefixes), modelParamsPrefixes, ctrMergePolicy.swigValue()), true);
  }

  public static TFullModel SumModels(TVector_const_TFullModel_ptr modelVector, TVector_double weights, TVector_TString modelParamsPrefixes) throws Exception {
    return new TFullModel(native_implJNI.SumModels__SWIG_1(TVector_const_TFullModel_ptr.getCPtr(modelVector), modelVector, TVector_double.getCPtr(weights), weights, TVector_TString.getCPtr(modelParamsPrefixes), modelParamsPrefixes), true);
  }

  public static void CalcSoftmax(double[] approx, double[] softmax) {
    native_implJNI.CalcSoftmax(approx, softmax);
  }

  public static int ModeFitImpl(TVector_TString args) {
    return native_implJNI.ModeFitImpl(TVector_TString.getCPtr(args), args);
  }

  public static void ShutdownWorkers(String hostsFile, int timeoutInSeconds) {
    native_implJNI.ShutdownWorkers(hostsFile, timeoutInSeconds);
  }

  public static void RunWorker(long numThreads, long nodePort) throws Exception {
    native_implJNI.RunWorker(numThreads, nodePort);
  }

  public static long GetPartitionTotalObjectCount(TVector_TDataProviderPtr trainDataProviders) {
    return native_implJNI.GetPartitionTotalObjectCount(TVector_TDataProviderPtr.getCPtr(trainDataProviders), trainDataProviders);
  }

  public static void CreateTrainingDataForWorker(int hostId, int numThreads, String plainJsonParamsAsString, TVector_i8 serializedLabelConverter, TVector_TDataProviderPtr trainDataProviders, QuantizedFeaturesInfoPtr quantizedFeaturesInfo, TVector_TDataProviderPtr trainEstimatedDataProviders, String precomputedOnlineCtrMetaDataAsJsonString) throws Exception {
    native_implJNI.CreateTrainingDataForWorker(hostId, numThreads, plainJsonParamsAsString, TVector_i8.getCPtr(serializedLabelConverter), serializedLabelConverter, TVector_TDataProviderPtr.getCPtr(trainDataProviders), trainDataProviders, QuantizedFeaturesInfoPtr.getCPtr(quantizedFeaturesInfo), quantizedFeaturesInfo, TVector_TDataProviderPtr.getCPtr(trainEstimatedDataProviders), trainEstimatedDataProviders, precomputedOnlineCtrMetaDataAsJsonString);
  }

  public static void CheckModelAndDatasetCompatibility(TFullModel model, TQuantizedFeaturesInfo datasetQuantizedFeaturesInfo) throws Exception {
    native_implJNI.CheckModelAndDatasetCompatibility(TFullModel.getCPtr(model), model, TQuantizedFeaturesInfo.getCPtr(datasetQuantizedFeaturesInfo), datasetQuantizedFeaturesInfo);
  }

  public static QuantizedFeaturesInfoPtr CreateQuantizedFeaturesInfoForModelApplication(TFullModel model, TFeaturesLayout datasetFeaturesLayout) throws Exception {
    return new QuantizedFeaturesInfoPtr(native_implJNI.CreateQuantizedFeaturesInfoForModelApplication(TFullModel.getCPtr(model), model, TFeaturesLayout.getCPtr(datasetFeaturesLayout), datasetFeaturesLayout), true);
  }

  public static TVector_TString GetMaybeGeneratedModelFeatureIds(TFullModel model, TFeaturesLayoutPtr datasetFeaturesLayout) throws Exception {
    return new TVector_TString(native_implJNI.GetMaybeGeneratedModelFeatureIds(TFullModel.getCPtr(model), model, TFeaturesLayoutPtr.getCPtr(datasetFeaturesLayout), datasetFeaturesLayout), true);
  }

  public static EFstrType GetDefaultFstrType(TFullModel model) throws Exception {
    return EFstrType.swigToEnum(native_implJNI.GetDefaultFstrType(TFullModel.getCPtr(model), model));
  }

  public static boolean PreparedTreesNeedLeavesWeightsFromDataset(TFullModel model) throws Exception {
    return native_implJNI.PreparedTreesNeedLeavesWeightsFromDataset(TFullModel.getCPtr(model), model);
  }

  public static TVector_double CollectLeavesStatisticsWrapper(TDataProviderPtr dataset, TFullModel model, TLocalExecutor localExecutor) throws Exception {
    return new TVector_double(native_implJNI.CollectLeavesStatisticsWrapper(TDataProviderPtr.getCPtr(dataset), dataset, TFullModel.getCPtr(model), model, TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public static TShapPreparedTrees PrepareTreesWithoutIndependent(TFullModel model, long datasetObjectCount, boolean needSumModelAndDatasetWeights, double[] leafWeightsFromDataset, EPreCalcShapValues mode, boolean calcInternalValues, ECalcTypeShapValues calcType, boolean calcShapValuesByLeaf, TLocalExecutor localExecutor) throws Exception {
    return new TShapPreparedTrees(native_implJNI.PrepareTreesWithoutIndependent(TFullModel.getCPtr(model), model, datasetObjectCount, needSumModelAndDatasetWeights, leafWeightsFromDataset, mode.swigValue(), calcInternalValues, calcType.swigValue(), calcShapValuesByLeaf, TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public static TVector_double CalcFeatureEffectLossChangeMetricStatsWrapper(TFullModel model, int featuresCount, TShapPreparedTrees preparedTrees, TDataProviderPtr dataset, ECalcTypeShapValues calcType, TLocalExecutor localExecutor) throws Exception {
    return new TVector_double(native_implJNI.CalcFeatureEffectLossChangeMetricStatsWrapper(TFullModel.getCPtr(model), model, featuresCount, TShapPreparedTrees.getCPtr(preparedTrees), preparedTrees, TDataProviderPtr.getCPtr(dataset), dataset, calcType.swigValue(), TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public static TVector_double CalcFeatureEffectLossChangeFromScores(TFullModel model, TCombinationClassFeatures combinationClassFeatures, double[] scoresMatrix) throws Exception {
    return new TVector_double(native_implJNI.CalcFeatureEffectLossChangeFromScores(TFullModel.getCPtr(model), model, TCombinationClassFeatures.getCPtr(combinationClassFeatures), combinationClassFeatures, scoresMatrix), true);
  }

  public static TVector_double CalcFeatureEffectAverageChangeWrapper(TFullModel model, double[] leafWeightsFromDataset) throws Exception {
    return new TVector_double(native_implJNI.CalcFeatureEffectAverageChangeWrapper(TFullModel.getCPtr(model), model, leafWeightsFromDataset), true);
  }

  public static TVector_double GetPredictionDiffWrapper(TFullModel model, TRawObjectsDataProviderPtr objectsDataProvider, TLocalExecutor localExecutor) throws Exception {
    return new TVector_double(native_implJNI.GetPredictionDiffWrapper(TFullModel.getCPtr(model), model, TRawObjectsDataProviderPtr.getCPtr(objectsDataProvider), objectsDataProvider, TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public static TShapValuesResult CalcShapValuesWithPreparedTreesWrapper(TFullModel model, TDataProviderPtr dataset, TShapPreparedTrees preparedTrees, ECalcTypeShapValues calcType, TLocalExecutor localExecutor) throws Exception {
    return new TShapValuesResult(native_implJNI.CalcShapValuesWithPreparedTreesWrapper(TFullModel.getCPtr(model), model, TDataProviderPtr.getCPtr(dataset), dataset, TShapPreparedTrees.getCPtr(preparedTrees), preparedTrees, calcType.swigValue(), TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public static void GetSelectedFeaturesIndices(TFullModel model, String feature1Name, String feature2Name, int[] featureIndices) throws Exception {
    native_implJNI.GetSelectedFeaturesIndices(TFullModel.getCPtr(model), model, feature1Name, feature2Name, featureIndices);
  }

  public static TShapInteractionValuesResult CalcShapInteractionValuesWithPreparedTreesWrapper(TFullModel model, TDataProviderPtr dataset, int[] selectedFeatureIndices, ECalcTypeShapValues calcType, TLocalExecutor localExecutor, TShapPreparedTrees preparedTrees) throws Exception {
    return new TShapInteractionValuesResult(native_implJNI.CalcShapInteractionValuesWithPreparedTreesWrapper(TFullModel.getCPtr(model), model, TDataProviderPtr.getCPtr(dataset), dataset, selectedFeatureIndices, calcType.swigValue(), TLocalExecutor.getCPtr(localExecutor), localExecutor, TShapPreparedTrees.getCPtr(preparedTrees), preparedTrees), true);
  }

  public static void CalcInteraction(TFullModel model, TVector_i32 firstIndices, TVector_i32 secondIndices, TVector_double scores) throws Exception {
    native_implJNI.CalcInteraction(TFullModel.getCPtr(model), model, TVector_i32.getCPtr(firstIndices), firstIndices, TVector_i32.getCPtr(secondIndices), secondIndices, TVector_double.getCPtr(scores), scores);
  }

  public static boolean HasNonZeroApproxForZeroWeightLeaf(TFullModel model) throws Exception {
    return native_implJNI.HasNonZeroApproxForZeroWeightLeaf(TFullModel.getCPtr(model), model);
  }

  public static long GetMaxObjectCountForFstrCalc(long objectCount, int featureCount) throws Exception {
    return native_implJNI.GetMaxObjectCountForFstrCalc(objectCount, featureCount);
  }

  public static TCombinationClassFeatures GetCombinationClassFeatures(TFullModel model) throws Exception {
    return new TCombinationClassFeatures(native_implJNI.GetCombinationClassFeatures(TFullModel.getCPtr(model), model), true);
  }

}
