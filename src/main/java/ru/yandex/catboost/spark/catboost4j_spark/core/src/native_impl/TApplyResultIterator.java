/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.yandex.catboost.spark.catboost4j_spark.core.src.native_impl;

public class TApplyResultIterator {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected TApplyResultIterator(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TApplyResultIterator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        native_implJNI.delete_TApplyResultIterator(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TApplyResultIterator(TFullModel model, SWIGTYPE_p_NCB__TObjectsDataProviderPtr objectsDataProvider, EPredictionType predictionType, TLocalExecutor localExecutor) throws Exception {
    this(native_implJNI.new_TApplyResultIterator(TFullModel.getCPtr(model), model, SWIGTYPE_p_NCB__TObjectsDataProviderPtr.getCPtr(objectsDataProvider), predictionType.swigValue(), TLocalExecutor.getCPtr(localExecutor), localExecutor), true);
  }

  public double GetSingleDimensionalResult(int objectIdx) {
    return native_implJNI.TApplyResultIterator_GetSingleDimensionalResult(swigCPtr, this, objectIdx);
  }

  public TVector_double GetSingleDimensionalResults() {
    return new TVector_double(native_implJNI.TApplyResultIterator_GetSingleDimensionalResults(swigCPtr, this), false);
  }

  public void GetMultiDimensionalResult(int objectIdx, double[] result) {
    native_implJNI.TApplyResultIterator_GetMultiDimensionalResult(swigCPtr, this, objectIdx, result);
  }

}
