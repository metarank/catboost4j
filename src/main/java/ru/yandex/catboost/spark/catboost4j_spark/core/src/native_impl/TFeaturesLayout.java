/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.yandex.catboost.spark.catboost4j_spark.core.src.native_impl;
import java.io.*;
public class TFeaturesLayout implements Serializable {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected TFeaturesLayout(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TFeaturesLayout obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(TFeaturesLayout obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        native_implJNI.delete_TFeaturesLayout(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TFeaturesLayout() {
    this(native_implJNI.new_TFeaturesLayout(), true);
  }

  public void Init(TVector_TFeatureMetaInfo data) throws Exception {
    native_implJNI.TFeaturesLayout_Init(swigCPtr, this, TVector_TFeatureMetaInfo.getCPtr(data), data);
  }

  public TVector_TString GetExternalFeatureIds() throws Exception {
    return new TVector_TString(native_implJNI.TFeaturesLayout_GetExternalFeatureIds(swigCPtr, this), true);
  }

  public long GetExternalFeatureCount() {
    return native_implJNI.TFeaturesLayout_GetExternalFeatureCount(swigCPtr, this);
  }

  public TVector_TFeatureMetaInfo GetExternalFeaturesMetaInfoAsVector() throws Exception {
    return new TVector_TFeatureMetaInfo(native_implJNI.TFeaturesLayout_GetExternalFeaturesMetaInfoAsVector(swigCPtr, this), true);
  }

            private void writeObject(ObjectOutputStream out) throws IOException {
                TVector_TFeatureMetaInfo data = null;
                try {
                    data = this.GetExternalFeaturesMetaInfoAsVector();
                } catch (Exception e) {
                    throw new IOException(
                        "Error in TFeaturesLayout::GetExternalFeaturesMetaInfoAsVector: " + e.getMessage()
                    );
                }
                out.writeUnshared(data);
            }

            private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
                this.swigCPtr = native_implJNI.new_TFeaturesLayout();
                this.swigCMemOwn = true;

                TVector_TFeatureMetaInfo data = (TVector_TFeatureMetaInfo)in.readUnshared();
                try {
                    Init(data);
                } catch (Exception e) {
                    throw new IOException(
                        "Error in TFeaturesLayout::Init: " + e.getMessage()
                    );
                }
            }
        
  public boolean equalsImpl(TFeaturesLayout rhs) {
    return native_implJNI.TFeaturesLayout_equalsImpl(swigCPtr, this, TFeaturesLayout.getCPtr(rhs), rhs);
  }


public boolean equals(Object obj) {
    if (obj instanceof TFeaturesLayout) {
        boolean ptrEqual = (((TFeaturesLayout)obj).swigCPtr == this.swigCPtr);
        if (ptrEqual) {
            return true;
        } else {
            return this.equalsImpl((TFeaturesLayout)obj);
        }
    } else {
        return false;
    }
}

public int hashCode() {
    return (int)this.swigCPtr;
}


    void releaseMem() {
        this.swigCMemOwn = false;
    }

}
