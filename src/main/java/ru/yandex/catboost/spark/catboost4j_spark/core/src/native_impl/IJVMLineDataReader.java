/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.yandex.catboost.spark.catboost4j_spark.core.src.native_impl;

public class IJVMLineDataReader extends ILineDataReader {
  private transient long swigCPtr;

  protected IJVMLineDataReader(long cPtr, boolean cMemoryOwn) {
    super(native_implJNI.IJVMLineDataReader_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IJVMLineDataReader obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(IJVMLineDataReader obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        native_implJNI.delete_IJVMLineDataReader(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    native_implJNI.IJVMLineDataReader_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    native_implJNI.IJVMLineDataReader_change_ownership(this, swigCPtr, true);
  }

  public boolean ReadLine(SWIGTYPE_p_TString line, SWIGTYPE_p_unsigned_long_long lineIdx) {
    return (getClass() == IJVMLineDataReader.class) ? native_implJNI.IJVMLineDataReader_ReadLine__SWIG_0(swigCPtr, this, SWIGTYPE_p_TString.getCPtr(line), SWIGTYPE_p_unsigned_long_long.getCPtr(lineIdx)) : native_implJNI.IJVMLineDataReader_ReadLineSwigExplicitIJVMLineDataReader__SWIG_0(swigCPtr, this, SWIGTYPE_p_TString.getCPtr(line), SWIGTYPE_p_unsigned_long_long.getCPtr(lineIdx));
  }

  public boolean ReadLine(SWIGTYPE_p_TString arg0, SWIGTYPE_p_TString arg1, SWIGTYPE_p_unsigned_long_long arg2) {
    return (getClass() == IJVMLineDataReader.class) ? native_implJNI.IJVMLineDataReader_ReadLine__SWIG_1(swigCPtr, this, SWIGTYPE_p_TString.getCPtr(arg0), SWIGTYPE_p_TString.getCPtr(arg1), SWIGTYPE_p_unsigned_long_long.getCPtr(arg2)) : native_implJNI.IJVMLineDataReader_ReadLineSwigExplicitIJVMLineDataReader__SWIG_1(swigCPtr, this, SWIGTYPE_p_TString.getCPtr(arg0), SWIGTYPE_p_TString.getCPtr(arg1), SWIGTYPE_p_unsigned_long_long.getCPtr(arg2));
  }

  public boolean ReadLineJVM(TStringOutWrapper line) {
    return native_implJNI.IJVMLineDataReader_ReadLineJVM(swigCPtr, this, TStringOutWrapper.getCPtr(line), line);
  }

  public void setLineIndex(java.math.BigInteger value) {
    native_implJNI.IJVMLineDataReader_LineIndex_set(swigCPtr, this, value);
  }

  public java.math.BigInteger getLineIndex() {
    return native_implJNI.IJVMLineDataReader_LineIndex_get(swigCPtr, this);
  }

  public IJVMLineDataReader() {
    this(native_implJNI.new_IJVMLineDataReader(), true);
    native_implJNI.IJVMLineDataReader_director_connect(this, swigCPtr, true, true);
  }

}
