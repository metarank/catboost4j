/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ru.yandex.catboost.spark.catboost4j_spark.core.src.native_impl;

public class TNanModeAndBordersBuilder {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected TNanModeAndBordersBuilder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TNanModeAndBordersBuilder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(TNanModeAndBordersBuilder obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        native_implJNI.delete_TNanModeAndBordersBuilder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TNanModeAndBordersBuilder(QuantizedFeaturesInfoPtr quantizedFeaturesInfo) throws Exception {
    this(native_implJNI.new_TNanModeAndBordersBuilder(QuantizedFeaturesInfoPtr.getCPtr(quantizedFeaturesInfo), quantizedFeaturesInfo), true);
  }

  public boolean HasFeaturesToCalc() {
    return native_implJNI.TNanModeAndBordersBuilder_HasFeaturesToCalc(swigCPtr, this);
  }

  public void SetSampleSize(int sampleSize) {
    native_implJNI.TNanModeAndBordersBuilder_SetSampleSize(swigCPtr, this, sampleSize);
  }

  public void AddSample(double[] objectData) {
    native_implJNI.TNanModeAndBordersBuilder_AddSample(swigCPtr, this, objectData);
  }

  public void CalcBordersWithoutNans(int threadCount) throws Exception {
    native_implJNI.TNanModeAndBordersBuilder_CalcBordersWithoutNans(swigCPtr, this, threadCount);
  }

  public void Finish(byte[] hasNans) throws Exception {
    native_implJNI.TNanModeAndBordersBuilder_Finish(swigCPtr, this, hasNans);
  }

}
